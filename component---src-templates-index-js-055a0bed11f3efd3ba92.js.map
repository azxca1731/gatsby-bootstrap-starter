{"version":3,"sources":["webpack:///./src/templates/Page/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js"],"names":["Page","_ref","data","react_default","a","createElement","dangerouslySetInnerHTML","__html","post","html","Template","location","Layout","Meta","title","get","site","Post","options","isIndex","adsense","templates_Page","props","pageQuery","Adsense","componentDidMount","this","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","className","style","display","data-ad-client","data-ad-slot","data-ad-format","React","Component","getAd","_data$frontmatter","frontmatter","category","tags","description","path","date","image","isMore","match","fixed","disqusConfig","url","MY_URL","identifier","key","gatsby_browser_entry","boxShadow","to","dateTime","Badges","items","primary","gatsby_image_default","width","getDescription","Button","label","lib_default","DiscussionEmbed","shortname","config","components_Adsense","body","replace","split","_ref2","_ref3","map","item","i"],"mappings":"kKAMeA,UAHF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAC,EAAAC,cAAA,OAAKC,wBAAyB,CAAEC,OAAQL,EAAKM,KAAKC,kDC0BrCC,UArBE,SAAAT,GAAA,IAAGC,EAAHD,EAAGC,KAAMS,EAATV,EAASU,SAAT,OACfR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQD,SAAUA,GAChBR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,MAAOC,IAAIb,EAAM,0BACjBc,KAAMD,IAAIb,EAAM,eAEuB,QAAxCa,IAAIb,EAAM,2BACTC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEf,KAAMa,IAAIb,EAAM,QAChBgB,QAAS,CACPC,SAAS,EACTC,QAASL,IAAIb,EAAM,wBAIvBC,EAAAC,EAAAC,cAACgB,WAAcC,cAOVC,EAAS,yLCJPC,oGAzBbC,6BACuBC,KAAKJ,MAAlBK,WAEJC,OAAOC,YAAcD,OAAOC,aAAe,IAAIC,KAAK,OAI1DC,kBAAS,IAAAC,EAC8BN,KAAKJ,MAAlCK,EADDK,EACCL,SAAUM,EADXD,EACWC,OAAQC,EADnBF,EACmBE,OAE1B,OAAOP,EACLxB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,MACbhC,EAAAC,EAAAC,cAAA,OACE8B,UAAU,cACVC,MAAO,CAAEC,QAAS,SAClBC,iBAAgBX,EAChBY,eAAcN,EACdO,iBAAgBN,KAIpB,OAtBgBO,IAAMC,sCC2EtBC,UAFS1B,IA9DF,SAAAhB,GAAuB,IAApBC,EAAoBD,EAApBC,KAAMgB,EAAcjB,EAAdiB,QAAc0B,EAS9B1C,EAAK2C,YAPPC,EAFgCF,EAEhCE,SACAC,EAHgCH,EAGhCG,KACAC,EAJgCJ,EAIhCI,YACAlC,EALgC8B,EAKhC9B,MACAmC,EANgCL,EAMhCK,KACAC,EAPgCN,EAOhCM,KACAC,EARgCP,EAQhCO,MAEMhC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACXX,EAAOM,IAAIb,EAAM,QACjBkD,EAASjC,KAAaV,EAAK4C,MAAM,qBACjCC,EAAQvC,IAAIoC,EAAO,yBAEnBI,EAAe,CACnBC,IAAQC,iCAAUR,EAClBS,WAAYT,EACZnC,SAEF,OACEX,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,UAAUwB,IAAKV,GAC5B9C,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,aACbhC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,QACbhC,EAAAC,EAAAC,cAACuD,EAAA,KAAD,CAAMxB,MAAO,CAAEyB,UAAW,QAAUC,GAAIb,GACtC9C,EAAAC,EAAAC,cAAA,UAAKS,GACLX,EAAAC,EAAAC,cAAA,QAAM0D,SAAUb,GAAOA,IAExBc,EAAO,CAAEC,MAAO,CAACnB,GAAWoB,SAAS,IACrCF,EAAO,CAAEC,MAAOlB,KAEnB5C,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,WACbhC,EAAAC,EAAAC,cAAA,SAAI2C,GACHM,EACCnD,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,UACbhC,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAKkD,MAAOA,EAAOlB,MAAO,CAAEgC,MAAO,WAGrC,IAGJjE,EAAAC,EAAAC,cAAA,OACE8B,UAAU,UACV7B,wBAAyB,CACvBC,OAAQ6C,EAASiB,EAAe5D,GAAQA,KAG3C2C,EAASkB,EAAO,CAAErB,OAAMsB,MAAO,OAAQL,SAAS,IAAU,GAC1DvB,EAAMxB,EAASC,GACfD,EACC,GAEAhB,EAAAC,EAAAC,cAACmE,EAAApE,EAAOqE,gBAAR,CACEC,UAvCc,sBAwCdC,OAAQpB,OAUN,SAACpC,EAASC,GACtB,OAAQD,EAAmE,GAAzDhB,EAAAC,EAAAC,cAACuE,EAAD,CAASjD,SAAUP,EAASa,OAAO,GAAGC,OAAO,WAG3DmC,EAAiB,SAAAQ,GAErB,OADAA,EAAOA,EAAKC,QAAQ,gBAAiB,oCAC5BzB,MAAM,2BAEU,KADvBwB,EAAOA,EAAKE,MAAM,sBACF,GACPF,EAAK,GAGTA,GAGHP,EAAS,SAAAU,GAAA,IAAG/B,EAAH+B,EAAG/B,KAAMsB,EAATS,EAAST,MAAOL,EAAhBc,EAAgBd,QAAhB,OACb/D,EAAAC,EAAAC,cAACuD,EAAA,KAAD,CAAMzB,UAAU,WAAW2B,GAAIb,GAC7B9C,EAAAC,EAAAC,cAAA,QACE8B,UAAS,sCACP+B,EAAU,sBAAwB,0BAGnCK,KAKDP,EAAS,SAAAiB,GAAA,IAAGhB,EAAHgB,EAAGhB,MAAOC,EAAVe,EAAUf,QAAV,OACbgB,IAAIjB,EAAO,SAACkB,EAAMC,GAChB,OACEjF,EAAAC,EAAAC,cAAA,QACE8B,UAAS,UAAW+B,EAAU,gBAAkB,mBAChDP,IAAKyB,GAEJD","file":"component---src-templates-index-js-055a0bed11f3efd3ba92.js","sourcesContent":["import React from 'react'\nimport './style.scss'\n\nconst Page = ({ data }) => (\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\n)\nexport default Page\n","import { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\nimport Page from 'templates/Page'\n\nconst Template = ({ data, location }) => (\n  <div>\n    <Layout location={location}>\n      <Meta\n        title={get(data, 'post.frontmatter.title')}\n        site={get(data, 'site.meta')}\n      />\n      {get(data, 'post.frontmatter.layout') != 'page' ? (\n        <Post\n          data={get(data, 'post')}\n          options={{\n            isIndex: false,\n            adsense: get(data, 'site.meta.adsense'),\n          }}\n        />\n      ) : (\n        <Page {...this.props} />\n      )}\n    </Layout>\n  </div>\n)\nexport default Template\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        layout\n        title\n        path\n        category\n        tags\n        description\n        date(formatString: \"YYYY/MM/DD\")\n        image {\n          childImageSharp {\n            fixed(width: 500) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\n\nimport Adsense from 'components/Adsense'\nimport Footer from 'components/Footer'\nimport Disqus from 'disqus-react'\nimport './style.scss'\n\nconst MY_URL = 'https://azxca1731.netlify.com'\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fixed = get(image, 'childImageSharp.fixed')\n  const disqusShortname = 'nogada-develop-blog'\n  const disqusConfig = {\n    url: `${MY_URL}/${path}`,\n    identifier: path,\n    title,\n  }\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <div className=\"col-12\">\n              <Img fixed={fixed} style={{ width: '100%' }} />\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n        {getAd(isIndex, adsense)}\n        {isIndex ? (\n          ''\n        ) : (\n          <Disqus.DiscussionEmbed\n            shortname={disqusShortname}\n            config={disqusConfig}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n\nconst getAd = (isIndex, adsense) => {\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n}\n\nconst getDescription = body => {\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n"],"sourceRoot":""}